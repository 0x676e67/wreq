name: CI

on:
  push:
    tags: ["v*"]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.github/**'
      - 'README.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write

jobs:
  style:
    name: Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Style check
        run: cargo fmt --all -- --check
      - name: Clippy check
        run: cargo clippy --all-targets --all-features -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build docs
        run: cargo doc --document-private-items --all-features

  hack:
    name: Hack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-hack from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-hack
      - name: Run hack script
        run: cargo hack check --each-feature

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        feature-set:
          - "--all-features"
          - "--no-default-features"
          - "--no-default-features --features webpki-roots"
          - "--features cookies"
          - "--features gzip,stream"
          - "--features brotli,stream"
          - "--features zstd,stream"
          - "--features deflate,stream"
          - "--features json"
          - "--features multipart"
          - "--features stream"
          - "--features hickory-dns"
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Run tests (${{ matrix.feature-set }})
        run: cargo nextest run --workspace ${{ matrix.feature-set }}

  windows:
    name: Windows
    runs-on: windows-latest
    environment: Windows
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install NASM
        run: |
          choco install nasm -y
      - name: Build
        run: |
          cargo build --all-features

  macos:
    name: macOS
    runs-on: macos-latest
    environment: macOS
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Build
        run: |
          cargo build --all-features

  linux:
    name: Linux
    needs: [style, tests, docs, windows, macos, hack]
    runs-on: ubuntu-latest
    environment: Linux
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
