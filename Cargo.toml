[package]
name = "wreq"
version = "5.1.0"
description = "A blazing-fast Rust HTTP Client with TLS fingerprint"
keywords = ["http", "client", "websocket", "ja3", "ja4"]
categories = ["web-programming::http-client"]
repository = "https://github.com/0x676e67/wreq"
documentation = "https://docs.rs/wreq"
authors = ["0x676e67 <gngppz@gmail.com>"]
readme = "README.md"
license = "Apache-2.0"
edition = "2024"
rust-version = "1.85"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["webpki-roots", "charset", "system-proxy"]

full = [
    "json",
    "stream",
    "cookies",
    "socks",
    "gzip",
    "brotli",
    "zstd",
    "deflate",
]

websocket = ["dep:tokio-tungstenite"]

charset = ["dep:encoding_rs", "dep:mime"]

cookies = ["dep:cookie_crate", "dep:cookie_store"]

gzip = ["tower-http/decompression-gzip"]

brotli = ["tower-http/decompression-br"]

zstd = ["tower-http/decompression-zstd"]

deflate = ["tower-http/decompression-deflate"]

json = ["dep:serde_json"]

multipart = ["dep:mime_guess"]

hickory-dns = ["dep:hickory-resolver"]

stream = ["tokio/fs", "dep:tokio-util"]

socks = ["dep:tokio-socks"]

webpki-roots = ["dep:webpki-root-certs"]

# Use the system's proxy configuration.
system-proxy = ["dep:system-configuration", "dep:windows-registry"]

# Optional enable tracing
tracing = ["http2/tracing", "dep:tracing"]

[dependencies]
base64 = "0.22"
url = "2.5"
serde = { version = "1.0", features = ["derive"] }
serde_urlencoded = "0.7.1"
tower = { version = "0.5.2", default-features = false, features = ["timeout", "util", "retry"] }
tower-service = "0.3"
sync_wrapper = { version = "1.0", features = ["futures"] }

# core
bytes = "1.2"
http = "1"
http-body = "1"
tokio = { version = "1", default-features = false, features = ["net","time","rt"] }
futures-channel = "0.3.31"
futures-util = { version = "0.3.31", default-features = false }
http2 = { version = "0.5.4", features = ["unstable"]}
http-body-util = "0.1"
httparse = "1.9"
pin-project-lite = "0.2.4"
smallvec = { version = "1.12", features = ["const_generics", "const_new"] }
want = "0.3"
socket2 = { version = "0.5.10", features = ["all"] }
percent-encoding = "2.3"
ipnet = "2.11.0"
schnellru = { version = "0.2.4", default-features = false }
ahash = { version = "0.8.11", default-features = false }

## boring-tls
boring2 = { version = "5.0.0-alpha.2", features = ["pq-experimental"] }
tokio-boring2 = { version = "5.0.0-alpha.2", features = ["pq-experimental"] }
brotli = "8.0.1"
flate2 = "1.1.2"
zstd = "0.13.3"
linked_hash_set = "0.1"

# Optional deps...

## json
serde_json = { version = "1.0", optional = true }

## multipart
mime_guess = { version = "2.0", default-features = false, optional = true }

## charset
encoding_rs = { version = "0.8", optional = true }
mime = { version = "0.3.17", optional = true }

# root certs
webpki-root-certs = { version = "1.0.0", optional = true }

## cookies
cookie_crate = { version = "0.18", package = "cookie", optional = true }
cookie_store = { version = "0.21", features = ["preserve_order"], optional = true }

## tower http
tower-http = { version = "0.6.6", default-features = false, optional = true }

## tokio util
tokio-util = { version = "0.7.15", default-features = false, features = ["codec","io"], optional = true }

## socks
tokio-socks = { version = "0.5.2", optional = true }

## websocket
tokio-tungstenite = { version = "0.27.0", default-features = false, features = ["handshake"], optional = true }

## hickory-dns
hickory-resolver = { version = "0.25.2", optional = true }

## tracing
tracing = { version = "0.1", default-features = false, features = ["std"], optional = true }

## windows system proxy
[target.'cfg(windows)'.dependencies]
windows-registry = { version = "0.5.2", optional = true }

## macOS system proxy
[target.'cfg(target_os = "macos")'.dependencies]
system-configuration = { version = "0.6.1", optional = true }

## interface binding
[target.'cfg(any(target_os = "ios", target_os = "visionos", target_os = "macos", target_os = "tvos", target_os = "watchos", target = "illumos", target = "solaris"))'.dependencies]
libc = "0.2.173"

[dev-dependencies]
hyper = { version = "1.1.0", default-features = false, features = [
    "http1",
    "http2",
    "client",
    "server",
] }
hyper-util = { version = "0.1.13", features = [
    "http1",
    "http2",
    "client",
    "client-legacy",
    "server-auto",
    "server-graceful",
    "tokio",
] }
serde = { version = "1.0", features = ["derive"] }
flate2 = "1.1.1"
zstd = "0.13"
brotli = "8.0.0"
tokio = { version = "1.0", default-features = false, features = [
    "macros",
    "rt-multi-thread",
] }
futures = { version = "0.3.0", default-features = false, features = ["std"] }
tower = { version = "0.5.2", default-features = false, features = ["limit"] }

env_logger = "0.11.8"
tracing = "0.1"
tracing-subscriber = "0.3.19"
tokio-test = "0.4"
pretty_env_logger = "0.5"

[lib]
doctest = false

[[test]]
name = "cookie"
path = "tests/cookie.rs"
required-features = ["cookies"]

[[test]]
name = "gzip"
path = "tests/gzip.rs"
required-features = ["gzip", "stream"]

[[test]]
name = "brotli"
path = "tests/brotli.rs"
required-features = ["brotli", "stream"]

[[test]]
name = "zstd"
path = "tests/zstd.rs"
required-features = ["zstd", "stream"]

[[test]]
name = "deflate"
path = "tests/deflate.rs"
required-features = ["deflate", "stream"]

[[test]]
name = "multipart"
path = "tests/multipart.rs"
required-features = ["multipart", "stream"]

[[example]]
name = "json_dynamic"
path = "examples/json_dynamic.rs"
required-features = ["json"]

[[example]]
name = "json_typed"
path = "examples/json_typed.rs"
required-features = ["json"]

[[example]]
name = "tor_socks"
path = "examples/tor_socks.rs"
required-features = ["socks"]

[[example]]
name = "form"
path = "examples/form.rs"

[[example]]
name = "hickory_dns"
path = "examples/hickory_dns.rs"
required-features = ["hickory-dns", "tracing"]

[[example]]
name = "http1_case_sensitive_headers"
path = "examples/http1_case_sensitive_headers.rs"

[[example]]
name = "emulation_firefox"
path = "examples/emulation_firefox.rs"
required-features = ["full", "tracing"]

[[example]]
name = "emulation_twitter"
path = "examples/emulation_twitter.rs"
required-features = ["full", "tracing"]

[[example]]
name = "set_cert_store"
path = "examples/set_cert_store.rs"
required-features = ["webpki-roots", "tracing"]

[[example]]
name = "request_with_redirect"
path = "examples/request_with_redirect.rs"
required-features = ["full", "tracing"]

[[example]]
name = "request_with_version"
path = "examples/request_with_version.rs"
required-features = ["full", "tracing"]

[[example]]
name = "request_with_proxy"
path = "examples/request_with_proxy.rs"
required-features = ["full", "tracing"]

[[example]]
name = "request_with_emulation"
path = "examples/request_with_emulation.rs"
required-features = ["full", "tracing"]

[[example]]
name = "connect_via_lower_priority_tokio_runtime"
path = "examples/connect_via_lower_priority_tokio_runtime.rs"
required-features = ["full", "tracing"]

[[example]]
name = "request_with_local_address"
path = "examples/request_with_local_address.rs"
required-features = ["full", "tracing"]

[[example]]
name = "request_with_interface"
path = "examples/request_with_interface.rs"
required-features = ["full", "tracing"]

[[example]]
name = "http1_websocket"
path = "examples/http1_websocket.rs"
required-features = ["websocket", "futures-util/std", "tracing"]

[[example]]
name = "http2_websocket"
path = "examples/http2_websocket.rs"
required-features = ["websocket", "futures-util/std", "tracing"]

[[example]]
name = "keylog"
path = "examples/keylog.rs"
